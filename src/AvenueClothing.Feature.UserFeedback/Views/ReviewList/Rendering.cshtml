@model AvenueClothing.Feature.UserFeedback.ViewModels.ReviewListRenderingViewModel
@{
    Layout = null;
}
<div class="js-add-review">
    @if (Model.Reviews.Any())
    {
        foreach (var review in Model.Reviews)
        {
            <section itemprop="review" itemscope itemtype="http://schema.org/Review" class="review">
                <header>
                    <div itemprop="reviewRating" itemscope itemtype="http://schema.org/Rating" class="review-stars">
                        @DisplayStars(review.Rating)
                    </div>
                    <p itemprop="name" class="review-headline">@review.Title</p>
                </header>
                <aside class="review-by">
                    <p>
                        by <span itemprop="author">@review.Name</span> on
                        <abbr title="@review.CreatedOn.ToString("u")">@review.CreatedOn.ToString("MMM dd, yyyy")</abbr>
                    </p>
                </aside>
                <p itemprop="description">@review.Comments</p>
                <meta itemprop="ratingValue" content="@review.Rating">
                <meta itemprop="worstRating" content="1">
                <meta itemprop="bestRating" content="5">
                <meta itemprop="datePublished" content="@review.CreatedOn.ToString("yyyy-MM-dd")" />
            </section>
        }

    }
    else
    {
        <p class="no-reviews">No-one has reviewed this product yet.</p>
    }
</div>

@helper DisplayStars(double? rating)
{
if (rating.HasValue)
{
        <span class="star-rating">
            @for (var i = 20; i <= 100; i = i + 20)
            {
                if (rating >= i)
                {
                    <i class="fa fa-star"></i>
                }
                else
                {
                    <i class="fa fa-star-o"></i>
                }
            }
        </span>
}
}


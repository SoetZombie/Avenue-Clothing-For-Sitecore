@model AvenueClothing.Feature.Transaction.Module.ViewModels.MiniBasketRenderingViewModel
@{
    Layout = null;
    var emptyClass = Model.IsEmpty ? null : "display:none;";
    var notEmptyClass = !Model.IsEmpty ? null: "display:none;";
}

<div class="js-mini-basket" data-refresh-url="@Model.RefreshUrl" data-mini-basket-empty-selector=".js-mini-basket-empty" data-mini-basket-not-empty-selector=".js-mini-basket-not-empty" data-mini-basket-number-of-items-selector=".js-mini-basket-number-of-items" data-mini-basket-total-selector=".js-mini-basket-total">
	<div style="@emptyClass" class="js-mini-basket-empty @emptyClass">
		<div class="pull-xs-right navbar-collapse">
			<ul class="nav navbar-nav">
				<li>
					<div>Your basket is empty</div>
				</li>
			</ul>
		</div>
	</div>

	<div style="@notEmptyClass" class="js-mini-basket-not-empty @notEmptyClass">
		<div class="pull-xs-right navbar-collapse">
			<ul class="nav navbar-nav">
				<li>
					<div>
						<span class="js-mini-basket-number-of-items">@Model.NumberOfItems</span> item(s) in basket, total: <span class="js-mini-basket-total">@Model.Total</span>
					</div>
				</li>
			</ul>
		</div>
	</div>
</div>

